{"mode":"Blocks","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"_2.^beQjx|FGt38A,8(E\">myVariable</variable></variables><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"-10\"><next><block type=\"iq_looks_print_new\" id=\"0~VqlTQ$-%@!2LQGcISq\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"oK4mE(OGkGk3e`x[%trj\"><field name=\"TEXT\">VOldemort is better than harry</field></shadow></value><next><block type=\"iq_motion_set_motor_torque\" id=\"y)pAD;/*Uu,5aypfj}o.\"><field name=\"MOTOR\">MotorGroup5</field><value name=\"TORQUE\"><shadow type=\"math_number\" id=\"ye|-!HZ~C0XWjviK*aj*\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_set_motor_torque\" id=\"#Eqg4?Hy=r#4rQy=#TO!\"><field name=\"MOTOR\">MotorGroup6</field><value name=\"TORQUE\"><shadow type=\"math_number\" id=\"@y@-DZH#%ir!993`zL2|\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_set_motor_velocity\" id=\"6VJr_ZB+tQ|)`G~![?yY\"><field name=\"MOTOR\">MotorGroup5</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"^Ce-*^d/#a$ioB[6]^6m\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_set_motor_velocity\" id=\"9S*fWhrq%SU_qGRB94C)\"><field name=\"MOTOR\">MotorGroup6</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"Tzs}d!y`IzGuW*W5Vu@P\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_spin\" id=\"ss$(97#_SHYGR7ebpRTQ\"><field name=\"MOTOR\">MotorGroup6</field><field name=\"DIRECTION\">fwd</field><next><block type=\"iq_motion_set_motor_stopping\" id=\"Jz9L?_v5Fk`hwV-tpy(Q\"><field name=\"MOTOR\">MotorGroup5</field><field name=\"MODE\">hold</field><next><block type=\"iq_motion_set_motor_stopping\" id=\"u;iS=R,`)49YQu%u+P0X\"><field name=\"MOTOR\">MotorGroup6</field><field name=\"MODE\">coast</field></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"1|eR4^j~!HuFpl|bC4Sw\" x=\"630\" y=\"110\"><field name=\"BUTTON\">ButtonLUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_motion_stop_motor\" id=\"v-fOZIVj]!}W8{QGsm3,\"><field name=\"MOTOR\">MotorGroup6</field><next><block type=\"iq_control_wait_until\" id=\"U.g]D)zM!4RI;t.P@X:B\"><value name=\"CONDITION\"><block type=\"iq_operator_not\" id=\"%J.[`m2qTldKHh2,0]h%\"><value name=\"OPERAND\"><block type=\"iq_sensing_pressing_controller\" id=\"A!BY5PHvkD6(p#9=)P3/\"><field name=\"BUTTON\">ButtonLUp</field></block></value></block></value><next><block type=\"iq_motion_spin\" id=\"wdI(j})VwMdHKp`mKQt!\"><field name=\"MOTOR\">MotorGroup6</field><field name=\"DIRECTION\">fwd</field></block></next></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"kUt9?ecJ~ok{*q=!Ts8Z\" x=\"650\" y=\"430\"><field name=\"BUTTON\">ButtonLDown</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_motion_spin\" id=\"AN_PbCutm?-@daTXv:V-\"><field name=\"MOTOR\">MotorGroup6</field><field name=\"DIRECTION\">rev</field><next><block type=\"iq_control_wait_until\" id=\"v2Pq?Bn{u82g/2fx;exM\"><value name=\"CONDITION\"><block type=\"iq_operator_not\" id=\"$DFRxj401GT/WaLa-JN9\"><value name=\"OPERAND\"><block type=\"iq_sensing_pressing_controller\" id=\":M7/(_y(oKWoU^N}/2]i\"><field name=\"BUTTON\">ButtonLDown</field></block></value></block></value><next><block type=\"iq_motion_spin\" id=\"Xtp57Of2abGjuKJzFYY+\"><field name=\"MOTOR\">MotorGroup6</field><field name=\"DIRECTION\">fwd</field></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[4,11,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"3:2","direction":"rev","gyroType":"none","width":"173","unit":"mm","wheelbase":"76","wheelbaseUnit":"mm","xOffset":"0","yOffset":"0","thetaOffset":"0"},"triportSourcePort":22},{"port":[5,9],"name":"MotorGroup5","customName":false,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","motor_a_reversed":"false","motor_b_reversed":"true"},"triportSourcePort":22},{"port":[6,12],"name":"MotorGroup6","customName":false,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","motor_a_reversed":"true","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[],"name":"Controller","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"MotorGroup5","rightDir":"false","e":"","eDir":"false","f":"","fDir":"false","l3r3":"","l3r3Dir":"false","drive":"split"},"triportSourcePort":22}],"slot":0,"platform":"IQ","sdkVersion":"20230818.11.00.00","appVersion":"3.0.4","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"Second","v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\nmotor LeftDriveSmart = motor(PORT4, 1.5, true);\nmotor RightDriveSmart = motor(PORT11, 1.5, false);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 200, 173, 76, mm, 1);\nmotor MotorGroup5MotorA = motor(PORT5, false);\nmotor MotorGroup5MotorB = motor(PORT9, true);\nmotor_group MotorGroup5 = motor_group(MotorGroup5MotorA, MotorGroup5MotorB);\n\nmotor MotorGroup6MotorA = motor(PORT6, true);\nmotor MotorGroup6MotorB = motor(PORT12, false);\nmotor_group MotorGroup6 = motor_group(MotorGroup6MotorA, MotorGroup6MotorB);\n\ncontroller Controller = controller();\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n// define variables used for controlling motors based on controller inputs\nbool ControllerRightShoulderControlMotorsStopped = true;\nbool DrivetrainLNeedsToBeStopped_Controller = true;\nbool DrivetrainRNeedsToBeStopped_Controller = true;\n\n// define a task that will handle monitoring inputs from Controller\nint rc_auto_loop_function_Controller() {\n  // process the controller input every 20 milliseconds\n  // update the motors based on the input values\n  while(true) {\n    if(RemoteControlCodeEnabled) {\n      \n      // calculate the drivetrain motor velocities from the controller joystick axies\n      // left = AxisA + AxisC\n      // right = AxisA - AxisC\n      int drivetrainLeftSideSpeed = Controller.AxisA.position() + Controller.AxisC.position();\n      int drivetrainRightSideSpeed = Controller.AxisA.position() - Controller.AxisC.position();\n      \n      // check if the value is inside of the deadband range\n      if (drivetrainLeftSideSpeed < 5 && drivetrainLeftSideSpeed > -5) {\n        // check if the left motor has already been stopped\n        if (DrivetrainLNeedsToBeStopped_Controller) {\n          // stop the left drive motor\n          LeftDriveSmart.stop();\n          // tell the code that the left motor has been stopped\n          DrivetrainLNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the left motor nexttime the input is in the deadband range\n        DrivetrainLNeedsToBeStopped_Controller = true;\n      }\n      // check if the value is inside of the deadband range\n      if (drivetrainRightSideSpeed < 5 && drivetrainRightSideSpeed > -5) {\n        // check if the right motor has already been stopped\n        if (DrivetrainRNeedsToBeStopped_Controller) {\n          // stop the right drive motor\n          RightDriveSmart.stop();\n          // tell the code that the right motor has been stopped\n          DrivetrainRNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the right motor next time the input is in the deadband range\n        DrivetrainRNeedsToBeStopped_Controller = true;\n      }\n      \n      // only tell the left drive motor to spin if the values are not in the deadband range\n      if (DrivetrainLNeedsToBeStopped_Controller) {\n        LeftDriveSmart.setVelocity(drivetrainLeftSideSpeed, percent);\n        LeftDriveSmart.spin(forward);\n      }\n      // only tell the right drive motor to spin if the values are not in the deadband range\n      if (DrivetrainRNeedsToBeStopped_Controller) {\n        RightDriveSmart.setVelocity(drivetrainRightSideSpeed, percent);\n        RightDriveSmart.spin(forward);\n      }\n      // check the ButtonRUp/ButtonRDown status to control MotorGroup5\n      if (Controller.ButtonRUp.pressing()) {\n        MotorGroup5.spin(forward);\n        ControllerRightShoulderControlMotorsStopped = false;\n      } else if (Controller.ButtonRDown.pressing()) {\n        MotorGroup5.spin(reverse);\n        ControllerRightShoulderControlMotorsStopped = false;\n      } else if (!ControllerRightShoulderControlMotorsStopped) {\n        MotorGroup5.stop();\n        // set the toggle so that we don't constantly tell the motor to stop when the buttons are released\n        ControllerRightShoulderControlMotorsStopped = true;\n      }\n    }\n    // wait before repeating the process\n    wait(20, msec);\n  }\n  return 0;\n}\n\ntask rc_auto_loop_task_Controller(rc_auto_loop_function_Controller);\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  Brain.Screen.print(\"VOldemort is better than harry\");\n  MotorGroup5.setMaxTorque(100.0, percent);\n  MotorGroup6.setMaxTorque(100.0, percent);\n  MotorGroup5.setVelocity(100.0, percent);\n  MotorGroup6.setVelocity(100.0, percent);\n  MotorGroup6.spin(forward);\n  MotorGroup5.setStopping(hold);\n  MotorGroup6.setStopping(coast);\n  return 0;\n}\n\n// \"when Controller ButtonLUp pressed\" hat block\nvoid onevent_ControllerButtonLUp_pressed_0() {\n  MotorGroup6.stop();\n  waitUntil((!Controller.ButtonLUp.pressing()));\n  MotorGroup6.spin(forward);\n}\n\n// \"when Controller ButtonLDown pressed\" hat block\nvoid onevent_ControllerButtonLDown_pressed_0() {\n  MotorGroup6.spin(reverse);\n  waitUntil((!Controller.ButtonLDown.pressing()));\n  MotorGroup6.spin(forward);\n}\n\n\nint main() {\n  // register event handlers\n  Controller.ButtonLUp.pressed(onevent_ControllerButtonLUp_pressed_0);\n  Controller.ButtonLDown.pressed(onevent_ControllerButtonLDown_pressed_0);\n\n  wait(15, msec);\n  whenStarted1();\n}","target":"Physical"}